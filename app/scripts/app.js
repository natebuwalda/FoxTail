// Generated by CoffeeScript 1.7.1
'use strict';
angular.module('foxtailArtisanrycomApp', ['ngAnimate', 'ngCookies', 'ngResource', 'ngSanitize', 'ngRoute', 'vcRecaptcha']).filter('partition', function() {
  var cache, filter;
  cache = {};
  filter = function(arr, size) {
    var arrString, fromCache, index, newArr, _i, _ref;
    if (!arr) {
      return;
    }
    newArr = [];
    for (index = _i = 0, _ref = arr.length; size > 0 ? _i <= _ref : _i >= _ref; index = _i += size) {
      newArr.push(arr.slice(index, index + size));
    }
    arrString = JSON.stringify(arr);
    fromCache = cache[arrString + size];
    if (JSON.stringify(fromCache) === JSON.stringify(newArr)) {
      return fromCache;
    }
    cache[arrString + size] = newArr;
    return newArr;
  };
  return filter;
}).directive('includeReplace', function() {
  return {
    require: 'ngInclude',
    link: function(scope, el, attrs) {
      return el.replaceWith(el.children());
    }
  };
}).directive('fileModel', function($parse) {
  return {
    restrict: 'A',
    link: function(scope, element, attrs) {
      var model, modelSetter;
      model = $parse(attrs.fileModel);
      modelSetter = model.assign;
      return element.bind('change', function() {
        return scope.$apply(function() {
          return modelSetter(scope, element[0].files[0]);
        });
      });
    }
  };
}).factory('fileUpload', [
  '$http', function($http) {
    var FileUpload;
    return new (FileUpload = (function() {
      function FileUpload() {
        console.log("constructed FileUpload");
      }

      FileUpload.prototype.uploadFileToUrl = function(file, uploadUrl) {
        var fd;
        fd = new FormData();
        fd.append('file', file);
        $http.post(uploadUrl, fd, {
          transformRequest: angular.identity,
          headers: {
            'Content-Type': void 0
          }
        }).success(function() {
          return console.log('file uploaded.');
        }).error(function() {
          return console.log('boo');
        });
      };

      return FileUpload;

    })());
  }
]).config(function($routeProvider, $locationProvider, $httpProvider) {
  $routeProvider.when('/', {
    templateUrl: 'partials/main',
    controller: 'MainCtrl'
  }).when('/admin/login', {
    templateUrl: 'partials/login',
    controller: 'LoginCtrl'
  }).when('/admin/dashboard', {
    templateUrl: 'partials/dashboard',
    controller: 'MainCtrl'
  }).when('/settings', {
    templateUrl: 'partials/settings',
    controller: 'SettingsCtrl',
    authenticate: true
  }).when('/gallery', {
    templateUrl: 'partials/gallery',
    controller: 'GalleryCtrl'
  }).when('/admin/dashboard', {
    templateUrl: 'partials/admin/dashboard',
    controller: 'AdminDashboardCtrl',
    authenticate: true
  }).when('/product/:id', {
    templateUrl: 'partials/product',
    controller: 'ProductCtrl'
  }).when('/faq', {
    templateUrl: 'partials/faq',
    controller: 'FaqCtrl'
  }).when('/about', {
    templateUrl: 'partials/about',
    controller: 'AboutCtrl'
  }).when('/contact', {
    templateUrl: 'partials/contact',
    controller: 'ContactCtrl'
  }).otherwise({
    redirectTo: '/'
  });
  $locationProvider.html5Mode(true);
  return $httpProvider.interceptors.push([
    '$q', '$location', function($q, $location) {
      return {
        responseError: function(response) {
          if (response.status === 401) {
            $location.path('/admin/login');
            return $q.reject(response);
          } else {
            return $q.reject(response);
          }
        }
      };
    }
  ]);
}).run(function($rootScope, $location, Auth) {
  return $rootScope.$on('$routeChangeStart', function(event, next) {
    if (next.authenticate && !Auth.isLoggedIn()) {
      return $location.path('/admin/login');
    }
  });
});
